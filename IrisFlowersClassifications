# First, we'll start by importing the necessary libraries:
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix
# Next, we'll load the data into a Pandas DataFrame:
df = pd.read_csv('iris_data.csv')
# Now, we'll split the data into training and testing sets:
X = df[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]
y = df['species']
# We've used the columns 'sepal_length', 'sepal_width', 'petal_length', and 'petal_width' as our features, and 'species' as our target variable.
# Next, we'll create an instance of the LogisticRegression class and fit the model on our training data:
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LogisticRegression()
model.fit(X_train, y_train)
# Now that our model is trained, we can use it to make predictions on our test data:
y_pred = model.predict(X_test)
# Finally, we can evaluate the performance of our model by calculating the confusion matrix and classification report:
print("Confusion matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification report:\n", classification_report(y_test, y_pred))

# Here's the complete code:
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix
df = pd.read_csv('iris_data.csv')
X = df[['sepal_length', 'sepal_width', 'petal_length', 'petal_width']]
y = df['species']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = LogisticRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("Confusion matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification report:\n", classification_report(y_test, y_pred))
